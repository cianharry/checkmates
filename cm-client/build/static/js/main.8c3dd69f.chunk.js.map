{"version":3,"sources":["actions/types.js","actions/alerts.js","helpers/setAuthToken.js","actions/auth.js","components/layout/Navbar.js","assets/plutchik-med.png","components/layout/Home.js","components/auth/Register.js","components/auth/Login.js","components/layout/Alert.js","actions/profile.js","components/dashboard/Actions.js","components/dashboard/Milestone.js","components/dashboard/Dashboard.js","components/router/PrivateRoute.js","reducers/alerts.js","reducers/auth.js","reducers/profile.js","reducers/checkin.js","reducers/chat.js","reducers/index.js","store.js","components/profile_forms/CreateProfile.js","components/profile_forms/EditProfile.js","components/profile_forms/AddMilestone.js","components/profiles/ProfileItem.js","components/profiles/Profiles.js","components/profile/ProfileMain.js","components/profile/ProfileMilestones.js","components/profile/Profile.js","components/checkins/CheckinItem.js","components/chats/Chats.js","actions/checkin.js","components/checkins/CheckinForm.js","assets/plutchik.png","components/checkins/Checkins.js","components/checkin/CheckinComment.js","components/checkin/CommentItem.js","components/checkin/Checkin.js","components/checkins/CheckinsAll.js","App.js","reportWebVitals.js","index.js"],"names":["SET_ALERT","REMOVE_ALERT","REGISTRATION_SUCCESS","REGISTRATION_FAILURE","USER_PRESENT","AUTH_FAILURE","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT","GET_USER_PROFILE","UPDATE_USER_PROFILE","CLEAR_USER_PROFILE","GET_ALL_PROFILES","PROFILE_ERROR","DELETE_USER","GET_CHECKINS","CHECKIN_ERROR","ADD_REACTION","DELETE_CHECKIN","CREATE_CHECKIN","GET_CHECKIN","ADD_COMMENT","DELETE_COMMENT","GET_CHAT","GET_ALL_CHATS","CREATE_CHAT","CHAT_ERROR","setAlert","msg","alertType","timeout","dispatch","id","uuid","type","payload","setTimeout","setAuthToken","token","axios","defaults","headers","common","userPresent","a","localStorage","get","res","data","connect","state","auth","logout","props","userLinks","className","to","onClick","guestLinks","loading","isAuthenticated","isAuth","role","src","plutchik","alt","width","height","title","frameBorder","allow","allowFullScreen","href","register","name","email","password","config","body","JSON","stringify","post","errors","response","forEach","error","useState","password2","formData","setFormData","onChange","e","target","value","onSubmit","preventDefault","console","log","placeholder","required","autoFocus","minLength","login","alerts","length","map","alert","getCurrentUser","statusText","status","createUserProfile","history","edit","push","Actions","deleteMilestone","delete","milestones","ms","description","format","dateAcheived","privacy","_id","profile","deleteUser","window","confirm","useEffect","Spinner","animation","user","Component","component","rest","render","initState","getItem","profiles","checkins","checkin","chats","chat","combineReducers","action","filter","setItem","removeItem","comments","comment","checkinId","reactions","middle","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","withRouter","experience","age","gender","bio","youtube","instagram","facebook","twitter","displaySocial","toggleSocial","social","addMilestone","put","checked","ProfileItem","avatar","getProfiles","p","ProfileMain","rel","ProfileMilestones","getProfileById","userId","match","params","pms","CheckinItem","addReaction","personalCheckins","deleteCheckin","showButtons","emotion","intensity","maintext","sentiment","magnitude","date","defaultProps","CONNECTION_PORT","socket","createCheckin","min","max","rows","getPersonalCheckins","addComment","text","setText","cols","deleteComment","commentId","getCheckin","location","hostname","room","setRoom","userName","setUserName","inRoom","setInRoom","message","setMessage","messageList","setMessageList","io","on","sendMessage","chatMessage","content","emit","val","key","getCheckins","App","exact","path","Home","Login","Register","Profiles","Chats","Checkin","Checkins","CheckinsAll","Profile","Dashboard","CreateProfile","EditProfile","AddMilestone","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.8c3dd69f.chunk.js","sourcesContent":["// centralised file to hold all of the constant action types in the application\n\nexport const SET_ALERT = 'SET_ALERT';\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\nexport const REGISTRATION_SUCCESS = 'REGISTRATION_SUCCESS';\nexport const REGISTRATION_FAILURE = 'REGISTRATION_FAILURE';\nexport const USER_PRESENT = 'USER_PRESENT';\nexport const AUTH_FAILURE = 'AUTH_FAILURE';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\nexport const LOGOUT = 'LOGOUT';\nexport const GET_USER_PROFILE = 'GET_USER_PROFILE';\nexport const UPDATE_USER_PROFILE = 'UPDATE_USER_PROFILE';\nexport const CLEAR_USER_PROFILE = 'CLEAR_USER_PROFILE';\nexport const GET_ALL_PROFILES = 'GET_ALL_PROFILES';\nexport const PROFILE_ERROR = 'PROFILE_ERROR';\nexport const DELETE_USER = 'DELETE_USER';\nexport const GET_CHECKINS = 'GET_CHECKINS';\nexport const CHECKIN_ERROR = 'CHECKIN_ERROR';\nexport const ADD_REACTION = 'ADD_REACTION'\nexport const DELETE_CHECKIN = 'DELETE_CHECKIN'\nexport const CREATE_CHECKIN = 'CREATE_CHECKIN'\nexport const GET_CHECKIN = 'GET_CHECKIN'\nexport const ADD_COMMENT = 'ADD_COMMENT'\nexport const DELETE_COMMENT = 'DELETE_COMMENT'\nexport const GET_CHAT = 'GET_CHAT'\nexport const GET_ALL_CHATS = 'GET_ALL_CHATS'\nexport const CREATE_CHAT = 'CREATE_CHAT'\nexport const CHAT_ERROR = 'CHAT_ERROR'","// package that provides universal id functionality\nimport { v4 as uuid } from 'uuid';\nimport { SET_ALERT, REMOVE_ALERT } from './types';\n\n// set alert action dispatches the type SET_ALERT to the reducer which adds the alert to the application state\nexport const setAlert = (msg, alertType, timeout = 5000) => dispatch => {\n    // generating a universal id\n    const id = uuid();\n    // dispatching set alert with the message, type and id\n    // Req_Id:      R0\n    // Test_Id:     T024\n    dispatch({\n        type: SET_ALERT,\n        payload: { msg, alertType, id }\n    });\n\n    // triggers the removal of the alert from the state, using the universal id, after a timeout of 5 seconds\n    // Req_Id:      R0\n    // Test_Id:     T025\n    setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id}), timeout);\n};","// helper function that recieves the token if present and adds it to the request headers\nimport axios from 'axios';\n\nconst setAuthToken = token => {\n    // if there is a token in local storage, add it to global headers as the x-auth-token value\n    if(token) {\n        axios.defaults.headers.common['x-auth-token'] = token;\n    }\n    else {\n        // otherwise remove the x-auth-token from the global headers\n        delete axios.defaults.headers.common['x-auth-token'];\n    }\n};\n\nexport default setAuthToken;","import axios from 'axios';\nimport { setAlert } from './alerts';\n// importing the Auth token helper\nimport setAuthToken from '../helpers/setAuthToken';\n// importing the action type constants \nimport { REGISTRATION_SUCCESS, REGISTRATION_FAILURE, USER_PRESENT, AUTH_FAILURE, LOGIN_SUCCESS, LOGIN_FAILURE, LOGOUT, CLEAR_USER_PROFILE } from './types';\n\n// CHECK USER AUTH STATUS\nexport const userPresent = () => async dispatch => {\n    // if there is a token in local storage call set auth token helper to add it to global headers\n    if(localStorage.token) {\n        setAuthToken(localStorage.token);\n    }\n\n    try {\n        // await the axios get request to the authentication api\n        const res = await axios.get('/api/auth');\n        // dispatching the user present action \n        dispatch({\n            type: USER_PRESENT,\n            payload: res.data\n        });\n    } catch (error) {\n        // dispatching the auth failure action\n        dispatch({\n            type: AUTH_FAILURE\n        })\n    }\n}\n\n\n// REGISTER A USER\nexport const register = ({ name, email, password}) => async dispatch => {\n    // headers config as data is being send\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n    // preparing the data to send in the request body\n    const body = JSON.stringify({ name, email, password });\n\n    try {\n        // creating res from the axiso post request\n        const res = await axios.post('/api/users', body, config);\n        // dispatching registration success action with type and response data (token)\n        dispatch({\n            type: REGISTRATION_SUCCESS,\n            payload: res.data\n        });\n        // dispatching user present action on registration success \n        dispatch(userPresent());\n    } catch (error) {\n        const errors = error.response.data.errors;\n        // if there are errors dispatch the set alert action for each of the error message(s)\n        // Req_Id:      R03 - Registration Validation\n        // Test_Id:     T026\n        if(errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n        }\n        // dispatching the resgistration failure action\n        dispatch({\n            type: REGISTRATION_FAILURE\n        })\n    }\n};\n\n// USER LOGIN\nexport const login = ( email, password ) => async dispatch => {\n    // headers config as data is being sent\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n    // preparing the data to send in the request body\n    const body = JSON.stringify({ email, password });\n\n    try {\n        // creating res from the axios post request\n        const res = await axios.post('/api/auth', body, config);\n        // dispatching registration success action with type and response data (token)\n        dispatch({\n            type: LOGIN_SUCCESS,\n            payload: res.data\n        });\n        // dispatching user present action on login success \n        dispatch(userPresent());\n    } catch (error) {\n        const errors = error.response.data.errors;\n        // if there are errors dispatch the set alert action for each of the error message(s)\n        // Req_Id:      R03 - Registration Validation\n        // Test_Id:     T026\n        if(errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n        }\n        // dispatching the resgistration failure action\n        dispatch({\n            type: LOGIN_FAILURE\n        });\n    }\n}\n\n// Logout user and clear the user profile\n// Req_Id: R0 \n// Test_Id: T036\nexport const logout = () => dispatch => {\n    dispatch({\n        type: CLEAR_USER_PROFILE\n    });\n    dispatch({\n        type: LOGOUT\n    });\n    \n}\n\n","import React, { Fragment } from 'react'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { logout } from '../../actions/auth'\nimport symbol from '../../assets/EnsoThumb.png'\n\nconst Navbar = (props) => {\n    // setting the links for authenticated users\n    // Req_Id:      R0 - \n    // Test_Id:     T032\n\n    // Req_Id:      R03 - User experience\n    // Test_Id:     T033 - LOGOUT\n    const userLinks = (\n        <nav className=\"nav nav-masthead justify-content-center\">\n            <Link\n                className=\"nav-link\"\n                to='/dashboard'>\n                    <i className='far fa-user-circle primary-col'/> <span className='hide-sm'> dashboard</span>\n            </Link>\n            <Link\n                className=\"nav-link\"\n                to='/checkins'><i className='fas fa-calendar-check primary-col'/><span className='hide-sm'> check-in</span>\n            </Link>\n            \n            <Link\n                className=\"nav-link\"\n                onClick={props.logout}\n                to='/'>\n                    <i className='fas fa-power-off primary-col'/><span className='hide-sm'> logout</span> \n            </Link>\n        </nav>\n    );\n    // setting the links for guest users\n    // Req_Id:      R0 - \n    // Test_Id:     T031\n    const guestLinks = (\n        \n        <nav className=\"nav nav-masthead \">    \n            <Link className=\"nav-link\" to='/'><i className=\"fas fa-home primary-col\"></i><span className='hide-sm ml-2'>Home</span> </Link>\n            <Link className=\"nav-link\" to='/register'>Register</Link>\n            <Link className=\"nav-link\" to='/login'>Login</Link>\n        </nav>\n    );\n    // ternary expression used to display links depending on the user auth state recieved from props\n    return (\n        <header className=\"masthead\">\n            <div className=\"inner\">\n                <i className=\"fas fa-pencil-alt primary-col hide-sm\"></i>\n                <Link className=\"header-brand hide-sm pl-2\" to='/'>check-mate</Link>\n                { !props.auth.loading && (<Fragment>{ props.auth.isAuthenticated ? userLinks : guestLinks }</Fragment>)}\n            </div>\n        </header>\n        \n    )\n}\n\nNavbar.propTypes = {\n    logout: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n}\n\n// mapping the auth state to props\nconst mapStateToProps = state => ({\n    auth: state.auth\n});\n\nexport default connect(mapStateToProps, { logout })(Navbar);","export default __webpack_public_path__ + \"static/media/plutchik-med.a6738d4f.png\";","import { Link, Redirect } from 'react-router-dom'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport plutchik from '../../assets/plutchik-med.png'\n\nconst Home = (props) => {\n    // redirect if user logged in\n    if(props.isAuth) {\n        return <Redirect to='/dashboard'/>\n    }\n    return (\n        <div className=\"home-container\">\n            <div className=\"cover-container d-flex h-100 p-3 mx-auto flex-column\">\n            <div className=\"vid-container\">\n                <h1 className=\"cover-heading large check-font\">Why check-mate?</h1>\n                <p className=\"lead\">The number of emotions we can experience as humans is estimated to exceed 34,000..... I know right?</p>\n                <p className=\"lead\">At <strong>check-mate</strong> we apply a methodothology defined by Plutchik, in which he identifies 8 primary emotions that are grouped into polar opposites. Combinations of these emotions are the building blocks of our daily experiences in life and the key to understanding personal emotional wellbeing. </p>\n                \n            </div>\n            <main role=\"main\" className=\"inner cover mt-2 p-5 text-center bg-light\">\n                <h2 className=\"cover-heading primary-col\">Plutchik's Wheel of Emotions</h2>\n                <img className='home-logo' src={plutchik} alt=''/>\n                <p className=\"lead\">Join us today and see how constructive journaling can have a positive impact on your life</p>\n                <p className=\"lead\">\n                <Link className=\"btn btn-lg btn-secondary\" to='/register'>Sign Up</Link>\n                <br/>\n                <Link className=\"btn btn-primary mt-2\" to='/login'>Login</Link>\n                </p>\n            </main>\n            <div className='vid-container mt-2'>\n                <div className=\"container\">\n                    <p className=\"lead\">Dr. Alan Watkins explains how utilizing such emotional tools helps us establish a plan of action</p>\n                    <iframe width=\"707\" height=\"397\" src=\"https://www.youtube.com/embed/h-rRgpPbR5w\" title=\"YouTube video player\" frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\n                </div>\n                <div className=\"container m-auto\">\n                    <p className=\"lead\">A short video on the importance of developing emotional intelligence for kids</p>\n                    <iframe width=\"707\" height=\"397\" src=\"https://www.youtube.com/embed/SJOjpprbfeE\" title=\"YouTube video player\" frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\n                </div>\n            </div>\n            \n            <div className='text-container mt-2 d-flex p-5 bg-light'>\n                <div className='w-50 text-center'>\n                    <p className=\"lead primary-col\">What we do?</p>\n                    <p><i className=\"fas primary-col fa-angle-right\"></i> Simplify emotions</p>\n                    <p><i className=\"fas primary-col fa-angle-right\"></i> Provide an opportunity for sharing</p>\n                    <p><i className=\"fas primary-col fa-angle-right\"></i> Empower individuals and others</p>\n                </div>\n                <div className='w-50 text-center'>\n                    <p className=\"lead primary-col\"> What you do?</p>\n                    <p><i className=\"fas primary-col fa-angle-right\"></i> Learn to attend to your emotions regularly</p>\n                    <p><i className=\"fas primary-col fa-angle-right\"></i> Become curious and patient with your emotions</p>\n                    <p><i className=\"fas primary-col fa-angle-right\"></i> Talk about them, be honest with yourself and others</p>\n                    <p><i className=\"fas primary-col fa-angle-right\"></i> Learn to accept different emotions through understanding</p>\n                </div>\n\n                </div>\n                <footer className=\"mastfoot  text-center\">\n                    <div className=\"inner mt-2\">\n                        <p>For professional medical support, please contact the <a className='primary-col' href=\"https://www.hse.ie/eng/services/list/4/mental-health-services/\">HSE</a>, provided by <a className='primary-col' href=\"/\">Checkmates</a>.</p>\n                        <p className=\" mb-3\">Checkmates © 2020-2021</p>\n                    </div>\n                </footer>\n                \n            </div>\n        </div>\n    )\n}\n\nHome.propTypes = {\n    isAuth: PropTypes.bool,\n}\n\nconst mapStateToProps = state => ({\n    isAuth: state.auth.isAuthenticated\n})\n\nexport default connect(mapStateToProps)(Home)","// Importing React, Fragment as container component, and useState for state management using hooks\nimport React, { Fragment, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport { setAlert } from '../../actions/alerts';\nimport { register } from '../../actions/auth';\nimport PropTypes from 'prop-types';\n\n/***************************************************************************************\n*    Title: DevConnector\n*    Author: Brad Traversy\n*    Date: 2019\n*    Code version: 2.0\n*    Availability: https://github.com/bradtraversy/devconnector_2.0\n*\n***************************************************************************************/\n\nconst Register = (props) => {\n    // setting the initial state of the formData constant\n    const [formData, setFormData] = useState({\n        name: '',\n        email: '',\n        password: '',\n        password2: ''\n    });\n    // Destructuring formData to access fields\n    const { name, email, password, password2 } = formData;\n    // using a spread operator to copy the form data\n    // using the onChange target to define what formData input filed should be updated\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n    const onSubmit = async e => {\n        e.preventDefault();\n        // Checking that the passwords match\n        if(password !== password2) {\n            // applying the alert reducer, configuring the message and alert type\n            props.setAlert('Passwords do not match', 'danger');\n            console.log('Passwords do not match');\n        }\n        else {\n            // call the register action using the destructured form data\n            props.register({ name, email, password });\n            console.log('Success');\n            /* ------ TEST --------\n            Req_Id:      R03 - Registration Validation\n            Test_Id:     T023\n\n                const newUser = {\n                name,\n                email,\n                password\n            }\n            //\n            try {\n                // configuring the headers for the request\n                const config = {\n                    headers: {\n                        'Content-Type': 'application/json'\n                    }\n                }\n                // configuring the request body to be sent\n                const body = JSON.stringify(newUser);\n                // await the axios post request to backend api\n                const res = await axios.post('/api/users', body, config);\n                // log the response data - json web token\n                console.log(res.data)\n            } catch (error) {\n                console.error(error.response.data);\n            }\n            */\n            \n        }\n    }\n    // Redirect user if logged in\n    if(props.isAuth) {\n        return <Redirect to=\"/dashboard\"/>\n    }\n\n    return (\n        <Fragment>\n            <div className=\"h-100 col-md-10 p-3 mx-auto \">\n                <div className=\"text-center mt-4\">\n                    <form className=\"form-signin\" onSubmit={e => onSubmit(e)}>\n                        <h1 className=\"large mb-3 check-font\">Register with check-mate</h1>\n                        <input\n                            type=\"text\"\n                            id=\"name\"\n                            name=\"name\"\n                            value={name}\n                            onChange={e => onChange(e)}\n                            className=\"form-control\"\n                            placeholder=\"Full name\"\n                            required\n                            />\n                        <input\n                            type=\"email\"\n                            id=\"inputEmail\"\n                            name=\"email\"\n                            value={email}\n                            onChange={e => onChange(e)}\n                            className=\"form-control\"\n                            placeholder=\"Email address\"\n                            required\n                            autoFocus=\"\"/>\n                        <input\n                            type=\"password\"\n                            id=\"inputPassword\"\n                            name=\"password\"\n                            value={password}\n                            onChange={e => onChange(e)}\n                            className=\"form-control\"\n                            placeholder=\"Password\"\n                            required\n                            minLength=\"8\"\n                            />\n                        <input\n                            type=\"password\"\n                            id=\"inputPassword2\"\n                            name=\"password2\"\n                            value={password2}\n                            onChange={e => onChange(e)}\n                            className=\"form-control\"\n                            placeholder=\"Confirm password\"\n                            required\n                            minLength=\"8\"\n                            />\n                        \n                        <button\n                            className=\"btn btn-lg btn-light btn-block mt-5\"\n                            type=\"submit\"\n                            value=\"Register\">Register</button>\n                            <p className=\"mt-2\">\n                            Already have an account?\n                        </p>\n                        <Link className=\"btn btn-secondary\" to='/login'>Login</Link>\n                        <p className=\"mt-5 mb-3\">Checkmates © 2020-2021</p>\n                    </form>\n                </div>\n            </div>\n        </Fragment>\n        \n    )\n}\n// adding to prop types\nRegister.propTypes = {\n    setAlert: PropTypes.func.isRequired,\n    register: PropTypes.func.isRequired,\n    isAuth: PropTypes.bool\n};\n// adding is authenticated boolean to props\nconst mapStateToProps = state => ({\n    isAuth: state.auth.isAuthenticated\n});\n\n// this allows access to props.setAlert and props.register action\nexport default connect(mapStateToProps, { setAlert, register })(Register);\n","// Importing React, Fragment as container component, and useState for state management using hooks\nimport React, { Fragment, useState } from 'react'\nimport { Link, Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { login } from '../../actions/auth'\n\n\nconst Login = (props) => {\n    // setting the initial state of the formData constant\n    const [formData, setFormData] = useState({\n        email: '',\n        password: ''\n    });\n    // Destructuring formData to access fields\n    const { email, password } = formData;\n    // using a spread operator to copy the form data\n    // using the onChange target to define what formData input filed should be updated\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n    const onSubmit = async e => {\n        e.preventDefault();\n        // triggers the login action from props\n        props.login(email, password);\n    };\n\n    // Redirect user if logged in\n    if(props.isAuth) {\n        return <Redirect to=\"/dashboard\"/>\n    }\n\n    return (\n        <Fragment>\n            <div className=\"h-100 col-md-10 p-3 mx-auto \">\n                <div className=\"text-center mt-4\">\n                    <form className=\"form-signin\" onSubmit={e => onSubmit(e)}>\n                        <h1 className=\"large check-font\">Login to your check-mate account</h1>\n                        <input\n                            type=\"email\"\n                            id=\"inputEmail\"\n                            name=\"email\"\n                            value={email}\n                            onChange={e => onChange(e)}\n                            className=\"form-control\"\n                            placeholder=\"Email address\"\n                            required\n                            autoFocus=\"\"/>\n                            \n                        <input\n                            type=\"password\"\n                            id=\"inputPassword\"\n                            name=\"password\"\n                            value={password}\n                            onChange={e => onChange(e)}\n                            className=\"form-control\"\n                            placeholder=\"Password\"\n                            required\n                            minLength=\"8\"/>\n                        \n                        <button\n                            className=\"btn btn-lg btn-light btn-block mt-5\"\n                            type=\"submit\"\n                            value=\"Login\">Login</button>\n                        <p className=\"mt-2\">\n                            Don't have an account?\n                        </p>\n                        <Link className=\"btn btn-secondary\" to='/register'>Register now</Link>\n                        <p className=\"mt-5 mb-3\">Checkmates © 2020-2021</p>\n                    </form>\n                </div>\n            </div>\n        </Fragment>\n    )  \n};\n// adding actions to prop types\nLogin.propTypes = {\n    login: PropTypes.func.isRequired,\n    isAuth: PropTypes.bool\n};\n// adding is authenticated boolean to props\nconst mapStateToProps = state => ({\n    isAuth: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, { login })(Login)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from  'react-redux'\n// destructuring props to access alerts created in mapStateToProps\nconst Alert = ({ alerts }) => \n    // checking that alerts exists and mappig the array\n    alerts !== null && alerts.length > 0 && alerts.map(alert => (\n        // dynamic styling based on the alert type\n        <div key={alert.id} className={`alert alert-${alert.alertType}`}>\n            { alert.msg }\n        </div>\n));\n\nAlert.propTypes = {\n    alerts: PropTypes.array.isRequired,\n}\n// mapping the Redux state (alert reducer) to the component props so it can be accessed\nconst mapStateToProps = state => ({\n    alerts: state.alerts\n})\n\nexport default connect(mapStateToProps)(Alert)\n","import axios from 'axios'\nimport { setAlert } from './alerts'\n\nimport { GET_USER_PROFILE, UPDATE_USER_PROFILE, CLEAR_USER_PROFILE, GET_ALL_PROFILES, PROFILE_ERROR, DELETE_USER } from './types'\n\n// action to get current user's profile\nexport const getCurrentUser = () => async dispatch => {\n    try {\n        // setting response to the get request to profile api\n        const res = await axios.get('/api/profile/me');\n        // dispatching the user profile reducer action\n        dispatch({\n            type: GET_USER_PROFILE,\n            payload: res.data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: {msg: error.response.statusText, status: error.response.status}\n        })\n    }\n}\n\n// action to get all profiles\nexport const getProfiles = () => async dispatch => {\n    // clearing any existing profile from application state\n    dispatch({ type: CLEAR_USER_PROFILE })\n    try {\n        // axios request to the backend api\n        // Req_Id:      R0\n        // Test_Id:     T045\n        const res = await axios.get('/api/profile')\n        // dispatching get all profile reducer action\n        dispatch({\n            type: GET_ALL_PROFILES,\n            payload: res.data\n        })\n    } catch (error) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: {msg: error.response.statusText, status: error.response.status}\n        })\n    }\n}\n\n// action to get profile by user Id\nexport const getProfileById = (userId) => async dispatch => {\n    try {\n        // axios request to the backend api\n        // Req_Id:      R0\n        // Test_Id:     T046\n        const res = await axios.get(`/api/profile/user/${userId}`)\n        // dispatching get profile by user id reducer action\n        dispatch({\n            type: GET_USER_PROFILE,\n            payload: res.data\n        })\n    } catch (error) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: {msg: error.response.statusText, status: error.response.status}\n        })\n    }\n}\n\n// action to create/update current user's profile\n// history object provides push method which allows aredirect from inside an action\nexport const createUserProfile = (formData, history, edit = false) => async dispatch => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n        // post request to profile backend api with fotm data and the config headers\n        const res = await axios.post('/api/profile', formData, config)\n        // dispatching the user profile reducer action \n        dispatch({\n            type: GET_USER_PROFILE,\n            payload: res.data\n        })\n        // dispatching the setAlert action to notify the user if the account has been updated or created\n        dispatch(setAlert(edit ? 'Profile has been updated' : 'Profile has been created ', 'success'))\n        // redirecting if creating a new profile\n        if(!edit) {\n            history.push('/dashboard')\n        }\n    } catch (error) {\n        const errors = error.response.data.errors;\n        // if there are errors dispatch the set alert action for each of the error message(s)\n        // Req_Id:      R - Profile Validation\n        // Test_Id:     T037\n        if(errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n        }\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: {msg: error.response.statusText, status: error.response.status}\n        })\n    }\n}\n\n// Add Milestone to Profile\nexport const addMilestone = (formData, history) => async dispatch => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n        // put request to profile backend api with form data and the config headers\n        const res = await axios.put('/api/profile/milestone', formData, config)\n        // dispatching the user profile reducer action \n        dispatch({\n            type: UPDATE_USER_PROFILE,\n            payload: res.data\n        })\n        // dispatching the setAlert action to notify the user that the milestone is added\n        // Req_Id:      R - Milestone Validation\n        // Test_Id:     T040\n        dispatch(setAlert('Milestone added to User Profile ', 'success'))\n        // redirecting when the milestone is added \n        history.push('/dashboard')\n    } catch (error) {\n        const errors = error.response.data.errors;\n        // if there are errors dispatch the set alert action for each of the error message(s)\n        // Req_Id:      R - Milestone Validation\n        // Test_Id:     T041\n        if(errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n        }\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: {msg: error.response.statusText, status: error.response.status}\n        })\n    }\n}\n\n// Delete Milestone from Profile\nexport const deleteMilestone = id => async dispatch => {\n    try {\n        const res = await axios.delete(`/api/profile/milestone/${id}`)\n\n        dispatch({\n            type: UPDATE_USER_PROFILE,\n            payload: res.data\n        })\n        // dispatching the setAlert action to notify the user that the milestone is added\n        // Req_Id:      R - Milestone deletion\n        // Test_Id:     T043\n        dispatch(setAlert('Milestone succesfully removed from User Profile ', 'success'))\n\n    } catch (error) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: {msg: error.response.statusText, status: error.response.status}\n        })\n    }\n}\n\n// Delete User account and dependent profile\nexport const deleteUser = () => async dispatch => {\n    if(window.confirm('Are you certain, this action cannot be reversed')) {\n        try {\n            await axios.delete('/api/profile')\n            \n            dispatch({ type: CLEAR_USER_PROFILE })\n            dispatch({ type: DELETE_USER })\n            // dispatching the setAlert action to notify the user that their account is deleted\n            // Req_Id:      R - Account deletion\n            // Test_Id:     T044\n            dispatch(setAlert('Checkmates account has been deleted', 'danger'))\n    \n        } catch (error) {\n            dispatch({\n                type: PROFILE_ERROR,\n                payload: {msg: error.response.statusText, status: error.response.status}\n            })\n        }\n    }\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport './Dashboard.css'\n\nconst Actions = () => {\n    return (\n        <div>\n            <div className='actions-div check-font h3'>\n                <Link\n                    to='/edit-profile'\n                    className='actions-container'>\n                    <i className=\"fas fa-pencil-alt primary-col\"/> \n                    <h4 className='hide-sm'>edit profile</h4>\n                </Link>\n                <Link\n                    to='/add-milestone'\n                    className='actions-container'>\n                    <i className=\"fas fa-book primary-col\"/> \n                    <h4 className='hide-sm'>mile-stones</h4>\n                </Link>\n                <Link\n                    to='/checkins'\n                    className='actions-container'>\n                    <i className=\"fas fa-calendar-check primary-col\"/> \n                    <h4 className='hide-sm'>check-ins</h4>\n                </Link>\n            </div>\n            <div className='actions-div2 check-font h3'>\n                <Link\n                    to='/chats'\n                    className='actions-container2'>\n                    <i className=\"fas fa-comments secondary-col\"/> \n                    <h4 className='hide-sm'>chat</h4>\n                </Link>\n                <Link\n                    to='/profiles'\n                    className='actions-container2'>\n                    <i className=\"fas fa-users secondary-col\"/> \n                    <h4 className='hide-sm'>circle</h4>\n                </Link>\n                <Link\n                    to='/checkins/all'\n                    className='actions-container2'>\n                    <i className=\"fas fa-link secondary-col\"/> \n                    <h4 className='hide-sm'>check-mates</h4>\n                </Link>\n            </div>\n        </div>\n    )\n}\n\nexport default Actions\n\n","import React, {Fragment} from 'react'\nimport PropTypes from 'prop-types'\n// REFERENCE - https://www.npmjs.com/package/react-moment\nimport Moment from 'react-moment'\nimport { connect } from 'react-redux'\nimport { deleteMilestone } from '../../actions/profile'\n\n\nconst Milestone = props => {\n    // if milestones exist each one is being map to its own row in the table\n    // Req_Id:      R - Display Profile Milestones\n    // Test_Id:     T042\n    return (\n        <Fragment>\n            <div className='container text-center'>\n                <h1 className=\"my-2 text-center check-font\">Your Milestones</h1>\n                {props.milestones && props.milestones.map(ms => (\n                    <div key={ms._id} className=\"milestones-div\">\n                        <div className=\"milestones-container\">\n                            <i  className=\"fas fa-medal\"></i>\n                            <h4><strong className='primary-col'>Title:</strong> {ms.title}</h4>\n                            <p className=\"lead check-font\">{ms.description}</p>\n                            <p className=\"lead primary-col\">\n                                <Moment format=\"DD/MM/YY\">{ms.dateAcheived}</Moment>\n                            </p>\n                            <p>\n                                {ms.privacy ? <i className=\"fas fa-eye-slash\"></i> : <i className=\"fas fa-eye\"></i>}\n                            </p>\n                            <button onClick={() => props.deleteMilestone(ms._id)} className=\"btn btn-danger\">Remove</button>\n                        </div>\n                    </div>\n                ))}    \n            </div>\n        </Fragment>\n    )\n}\n\nMilestone.propTypes = {\n    milestones: PropTypes.array.isRequired,\n    deleteMilestone: PropTypes.func.isRequired,\n}\n\nexport default connect(null, { deleteMilestone })(Milestone)\n","import React, { Fragment, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { getCurrentUser } from '../../actions/profile'\n// REFERENCE https://www.educative.io/edpresso/how-to-create-a-loading-spinner-in-react\nimport { Spinner } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport  Actions  from './Actions';\nimport Milestone from './Milestone';\nimport { deleteUser } from '../../actions/profile';\n\n// destructuring props\nconst Dashboard = ({getCurrentUser, deleteUser, auth, profile}) => {\n    useEffect(() => {\n        // Req_Id: R0 \n        // Test_Id: T034\n        getCurrentUser();\n    }, [getCurrentUser])\n    return profile.loading && profile.profile === null ? (\n        <Spinner\n            animation=\"border\"\n            role=\"status\">\n        </Spinner>\n    ) : (\n        <Fragment>\n            <div className='dashboard-container'>\n            <div className=\"my-2\">\n                    <button onClick={() => deleteUser() } className=\"btn btn-danger float-right\">Delete Account</button>\n                </div>\n                <h1 className=\"mainheading large check-font\">Dashboard</h1>\n                \n                <p className=\"lead\">\n                    <i className=\"fas fa-user pr-2\"></i> \n                    Welcome, { auth.user && auth.user.name }\n                </p>\n                {/*\n                // Req_Id: R0 \n                // Test_Id: T035\n                */}\n                { profile.profile !== null ? (\n                    <Fragment>\n                        <Actions/>\n                        <div className=\"ms\">\n                            <Milestone milestones={profile.profile.milestones} />\n                        </div>\n                    </Fragment>\n                ) : (\n                    <Fragment>\n                        <p>You need to add your profile information before accessing the checkmates dashboard </p>\n                        <Link to='/create-profile' className='btn btn-secondary'>\n                            Create Profile\n                        </Link>\n                    </Fragment>\n                )}\n            </div>\n        </Fragment>\n    )\n}\n\nDashboard.propTypes = {\n    deleteUser: PropTypes.func.isRequired,\n    getCurrentUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    profile: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    profile: state.profile,\n})\n\nexport default connect(mapStateToProps, { getCurrentUser, deleteUser })(Dashboard)\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\n\n\n// private router component thta redirects unauthenticated user when they visit protected routes\n// otherewise the target component is rendered with any relative state props\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\n    <Route \n        {...rest}\n        render={props => \n            !auth.isAuthenticated && !auth.loading ? (\n                <Redirect to='/login'/>\n            ) : (\n                <Component {...props} />\n            ) \n        }\n    />\n)\n\nPrivateRoute.propTypes = {\n    auth: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoute)\n","// reducer that handles alerts based off application state changes\nimport { SET_ALERT, REMOVE_ALERT } from '../actions/types'\nconst initState = [\n];\n\n// function that updates the state based on the action type \nexport default function alerts(state = initState, action) {\n    switch(action.type) {\n        // adds the alert action payload to the state array\n        case SET_ALERT:\n            return [...state, action.payload];\n        // removes the alert action payload from the state array\n        case REMOVE_ALERT:\n            return state.filter(alert => alert.id !== action.payload);\n        default:\n            return state;\n    }\n}","// reducer that handles authentication based off application state changes\nimport  { REGISTRATION_SUCCESS, REGISTRATION_FAILURE, USER_PRESENT, AUTH_FAILURE, LOGIN_SUCCESS, LOGIN_FAILURE, LOGOUT, DELETE_USER } from '../actions/types';\n// initialising auth state\nconst initState = {\n    // attempting to fetch token that exists in local storage\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    loading: true,\n    user: null\n}\n\nexport default function auth(state = initState, action) {\n    switch(action.type) {\n        case USER_PRESENT:\n            return {\n                ...state,\n                isAuthenticated: true,\n                loading: false,\n                user: action.payload\n            }\n        case REGISTRATION_SUCCESS:\n        case LOGIN_SUCCESS:\n            // adding the token to local storage\n            localStorage.setItem('token', action.payload.token);\n            // returning successful auth state\n            return {\n                // using a spread operator as state is immutable\n                ...state,\n                ...action.payload,\n                isAuthenticated: true,\n                loading: false\n            }\n        case REGISTRATION_FAILURE:\n        case AUTH_FAILURE:\n        case LOGIN_FAILURE:\n        case LOGOUT:\n        case DELETE_USER:\n            // removing the invalid token from local storage\n            localStorage.removeItem('token');\n            // returning failed auth state\n            return {\n                ...state,\n                token: null,\n                isAuthenticated: false,\n                loading: false\n            }\n\n        default:\n            return state;\n    }\n}","import { GET_USER_PROFILE, UPDATE_USER_PROFILE, PROFILE_ERROR, CLEAR_USER_PROFILE, GET_ALL_PROFILES } from '../actions/types';\n\n// initiliazing profile state\nconst initState = {\n    profile: null,\n    profiles: [],\n    loading: true,\n    error: {}\n}\n\nexport default function profile(state = initState, action) {\n    switch(action.type) {\n        case GET_USER_PROFILE:\n        case UPDATE_USER_PROFILE:\n            return {\n                ...state,\n                profile: action.payload,\n                loading: false\n            }\n        case GET_ALL_PROFILES:\n            return {\n                ...state,\n                profiles: action.payload,\n                loading: false\n            }\n        case PROFILE_ERROR:\n            return {\n                ...state,\n                error: action.payload,\n                loading: false,\n                profile: null\n            }\n        case CLEAR_USER_PROFILE:\n            return {\n                ...state,\n                profile: null,\n                loading: false\n            }\n        default:\n            return state;\n    }\n}","import { GET_CHECKINS, ADD_REACTION, GET_CHECKIN, CHECKIN_ERROR, CREATE_CHECKIN, DELETE_CHECKIN, ADD_COMMENT, DELETE_COMMENT } from '../actions/types'\n// initiliazing checkin state\nconst initState = {\n    checkins: [],\n    checkin: null,\n    loading: true,\n    error: {}\n}\n\n/***************************************************************************************\n*    Title: DevConnector\n*    Author: Brad Traversy\n*    Date: 2019\n*    Code version: 2.0\n*    Availability: https://github.com/bradtraversy/devconnector_2.0\n*\n***************************************************************************************/\n\nexport default function checkin(state = initState, action) {\n    switch(action.type) {\n        case GET_CHECKINS:\n            return {\n                ...state,\n                checkins: action.payload,\n                loading: false\n            }\n        case CREATE_CHECKIN:\n            // adding the newly created checkin to the existing checkins array\n            return {\n                ...state,\n                checkins: [action.payload, ...state.checkins],\n                loading: false\n            }\n        case GET_CHECKIN:\n            return {\n                ...state,\n                checkin: action.payload,\n                loading: false\n            }\n        case DELETE_CHECKIN:\n            return {\n                ...state,\n                // returning all the checkin except for the one that has been deleted\n                checkins: state.checkins.filter(checkin => checkin._id !== action.payload),\n                loading: false\n            }\n        case CHECKIN_ERROR:\n            return {\n                ...state,\n                error: action.payload,\n                loading: false,\n                checkin: null\n            }\n        case ADD_COMMENT:\n            return {\n                ...state,\n                checkin: { ...state.checkin, comments: action.payload },\n                loading: false\n            }\n        case DELETE_COMMENT:\n            return {\n                ...state,\n                // filtering out the comment that matches the id\n                checkin: { ...state.checkin, comments: state.checkin.comments.filter(comment => comment._id !== action.payload) },\n                loading: false\n            }\n        case ADD_REACTION:\n            return {\n                ...state,\n                // mapping through the checkins to see if it matches the payload id, return the state with reactions\n                checkins: state.checkins.map(checkin => checkin._id === action.payload.checkinId ? {\n                    ...checkin, reactions: action.payload.reactions\n                } : checkin),\n                loading: false\n            }\n        default:\n            return state\n    }\n}","import { GET_CHAT, GET_ALL_CHATS, CREATE_CHAT, CHAT_ERROR } from '../actions/types'\n// initiliazing checkin state\nconst initState = {\n    chats: [],\n    chat: null,\n    loading: true,\n    error: {}\n}\n\nexport default function chat(state = initState, action) {\n    switch(action.type) {\n        case GET_ALL_CHATS:\n            return {\n                ...state,\n                chats: action.payload,\n                loading: false\n            }\n        case GET_CHAT:\n            return {\n                ...state,\n                chat: action.payload,\n                loading: false\n            }\n        case CREATE_CHAT:\n            // adding the newly created chat to the existing chats array\n            return {\n                ...state,\n                chats: [action.payload, ...state.chats],\n                loading: false\n            }\n        case CHAT_ERROR:\n            return {\n                ...state,\n                error: action.payload,\n                loading: false,\n                chat: null\n            }\n        default:\n            return state\n    }\n}","// ROOT REDUCER\nimport { combineReducers } from 'redux'\nimport alerts from './alerts'\nimport auth from './auth'\nimport profile from './profile'\nimport checkin from './checkin'\nimport chat from './chat'\n// object containing all of the application reducers\nexport default combineReducers({\n    alerts,\n    auth,\n    profile,\n    checkin,\n    chat\n});","// Redux Store\n// REFERENCE: This code snippet was developed using the Redux Developers Doumentation\n// Available at: https://github.com/reduxjs/redux-devtools#documentation \n\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\n//initial state\nconst initState = {};\n// thunk middleware\nconst middle = [thunk];\n// creating the redux store\nconst store =  createStore(rootReducer, initState, composeWithDevTools(applyMiddleware(...middle)));\n\nexport default store;\n","import React, { Fragment, useState } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { createUserProfile } from '../../actions/profile'\n\nconst CreateProfile = (props) => {\n    // initializing from data \n    const [formData, setFormData] = useState({\n        experience: '',\n        age: 0,\n        gender: '',\n        bio: '',\n        youtube: '',\n        instagram: '',\n        facebook: '',\n        twitter: ''\n    })\n    // used to toggle the social media input fields\n    const [displaySocial, toggleSocial] = useState(false);\n\n    // destructuring constants from form data\n    const {\n        experience,\n        age,\n        gender,\n        bio,\n        youtube,\n        instagram,\n        facebook,\n        twitter\n    } = formData\n    // using a spread operator to copy the form data\n    // using the onChange target to define what formData input feild should be updated\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n    // calling the create profile action on form submission\n    const onSubmit = async e => {\n        e.preventDefault();\n        // Req_Id: R0 \n        // Test_Id: T038\n        props.createUserProfile(formData, props.history)\n    }\n\n    return (\n        <Fragment>\n            <div className=\"profile-form\">\n                <h1 className=\"large text-center check-font\">\n                    Create Your Check-mate Profile\n                </h1>\n                \n                \n                <form className=\"form\" onSubmit={e => onSubmit(e)}>\n                <p className=\"lead\">\n                    <i  className=\"fas fa-user primary-col text-center\"></i> Let's start by getting some basic profile information to help with your experience\n                </p>\n                    <p>\n                        Give us an idea of where you are at in your personal journey with mental health\n                    </p>\n                    <div className=\"form-group\">\n                        <select\n                        onChange={e => onChange(e)}\n                        className='form-control'\n                        name=\"experience\"\n                        value={experience} >\n                            <option value=\"0\">* Select Experience</option>\n                            <option value=\"Beginner\">Beginner</option>\n                            <option value=\"Intermediate\">Intermediate</option>\n                            <option value=\"Experienced\">Experienced</option>\n                        </select>\n                        \n                    </div>\n                    <div className=\"form-group\">\n                        <p className=\"lead\">\n                            Age\n                        </p>\n                        <input\n                            className=\"form-control\"\n                            type=\"number\"\n                            placeholder=\"Age\"\n                            name=\"age\"\n                            value={age}\n                            onChange={e => onChange(e)} />\n                    </div>\n                    <div className=\"form-group\">\n                        <p className=\"lead\">\n                            Biological Sex\n                        </p>\n                        <input\n                            className=\"form-control\"\n                            type=\"text\"\n                            placeholder=\"\"\n                            name=\"gender\"\n                            value={gender}\n                            onChange={e => onChange(e)} />\n                    <small className=\"form-text\">\n                        This is used solely for analytics purposes and not for classification of any sort\n                    </small>\n                    </div>\n                    <div className=\"form-group\">\n                        <p className=\"lead\">\n                            Personal Bio\n                        </p>\n                        <textarea\n                            className=\"form-control\"\n                            type=\"text\"\n                            placeholder=\"Please provide a bio for your profile\"\n                            name=\"bio\"\n                            value={bio}\n                            onChange={e => onChange(e)} />\n                    </div>\n                    <div className=\"my-2\">\n                        <button onClick={() => toggleSocial(!displaySocial)} type=\"button\" className=\"btn btn-secondary mr-2\">\n                            Add Social Links\n                        </button>\n                        <span>Optional - do not share social links if you are not comfortable with it or are looking for a more private experience</span>\n                    </div>\n\n                    {displaySocial && <Fragment>\n                        <div className=\"form-group social-input\">\n                            <i className=\"fab fa-twitter fa-2x\"></i>\n                            <input\n                                className=\"form-control\"\n                                type=\"text\"\n                                placeholder=\"Twitter URL\"\n                                name=\"twitter\"\n                                value={twitter}\n                                onChange={e => onChange(e)} />\n                            </div>\n\n                            <div className=\"form-group social-input\">\n                                <i className=\"fab fa-facebook fa-2x\"></i>\n                                <input\n                                    className=\"form-control\"\n                                    type=\"text\"\n                                    placeholder=\"Facebook URL\"\n                                    name=\"facebook\"\n                                    value={facebook}\n                                    onChange={e => onChange(e)} />\n                            </div>\n\n                            <div className=\"form-group social-input\">\n                                <i className=\"fab fa-youtube fa-2x\"></i>\n                                <input\n                                    className=\"form-control\"\n                                    type=\"text\"\n                                    placeholder=\"YouTube URL\"\n                                    name=\"youtube\"\n                                    value={youtube}\n                                    onChange={e => onChange(e)} />\n                            </div>\n\n                            <div className=\"form-group social-input\">\n                                <i className=\"fab fa-instagram fa-2x\"></i>\n                                <input\n                                    className=\"form-control\"\n                                    type=\"text\"\n                                    placeholder=\"Instagram URL\"\n                                    name=\"instagram\"\n                                    value={instagram}\n                                    onChange={e => onChange(e)} />\n                            </div>\n                        </Fragment>\n                    }\n                    <input type=\"submit\" className=\"btn btn-secondary my-1 mr-1\" />\n                    <Link className=\"btn btn-light my-1\" to=\"/dashboard\">Go Back</Link>\n                </form>\n            </div>\n        </Fragment>\n    )\n}\n\nCreateProfile.propTypes = {\n    createUserProfile: PropTypes.func.isRequired,\n}\n\n// withRouter allows us to pass in the history object for redirect\nexport default connect(null, { createUserProfile })(withRouter(CreateProfile))\n","import React, { Fragment, useState, useEffect } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { createUserProfile, getCurrentUser } from '../../actions/profile'\n\nconst EditProfile = ({ createUserProfile, getCurrentUser, history, profile: { profile, loading }}) => {\n    // initializing from data \n    const [formData, setFormData] = useState({\n        experience: '',\n        age: 0,\n        gender: '',\n        bio: '',\n        youtube: '',\n        instagram: '',\n        facebook: '',\n        twitter: ''\n    })\n    // used to toggle the social media input fields\n    const [displaySocial, toggleSocial] = useState(false);\n    //\n    useEffect(() => {\n        // get the current user profile using the profile action\n        getCurrentUser()\n        // if the component is loading or any of the fields arent present in the state then show blank\n        // otherwise show the existing state profile feilds \n        setFormData({\n            experience: loading || !profile.experience ? '' : profile.experience,\n            age: loading || !profile.age ? 0 : profile.age,\n            gender: loading || !profile.gender ? '' : profile.gender,\n            bio: loading || !profile.bio ? '' : profile.bio,\n            youtube: loading || !profile.social ? '' : profile.social.youtube,\n            instagram: loading || !profile.social ? '' : profile.social.instagram,\n            facebook: loading || !profile.social ? '' : profile.social.facebook,\n            twitter: loading || !profile.social ? '' : profile.social.twitter\n        })\n        // \n    }, [getCurrentUser])\n\n    // destructuring constants from form data\n    const {\n        experience,\n        age,\n        gender,\n        bio,\n        youtube,\n        instagram,\n        facebook,\n        twitter\n    } = formData\n    // using a spread operator to copy the form data\n    // using the onChange target to define what formData input feildd should be updated\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n    // calling the create profile action on form submission\n    const onSubmit = async e => {\n        e.preventDefault();\n        // setting edit to true to signify its an edit action\n        // Req_Id: R0 \n        // Test_Id: T039\n        createUserProfile(formData, history, true)\n    }\n\n    return (\n        <Fragment>\n            <div className=\"profile-form\">\n                <h1 className=\"large text-center check-font\">\n                    Edit Your Check-mate Profile\n                </h1>\n                \n                \n                <form className=\"form\" onSubmit={e => onSubmit(e)}>\n                <p className=\"lead text-center\">\n                    <i  className=\"fas fa-user primary-col\"></i> Let's start by getting some basic profile information to help with your experience\n                </p>\n                    <p>\n                        Give us an idea of where you are at in your personal journey with mental health\n                    </p>\n                    <div className=\"form-group\">\n                        <select\n                        onChange={e => onChange(e)}\n                        className='form-control'\n                        name=\"experience\"\n                        value={experience} >\n                            <option value=\"0\">* Select Experience</option>\n                            <option value=\"Beginner\">Beginner</option>\n                            <option value=\"Intermediate\">Intermediate</option>\n                            <option value=\"Experienced\">Experienced</option>\n                        </select>\n                        \n                    </div>\n                    <div className=\"form-group\">\n                        <p className=\"large check-font\">\n                            Age\n                        </p>\n                        <input\n                            className=\"form-control\"\n                            type=\"number\"\n                            placeholder=\"Age\"\n                            name=\"age\"\n                            value={age}\n                            onChange={e => onChange(e)} />\n                    </div>\n                    <div className=\"form-group\">\n                        <p className=\"large check-font\">\n                            Biological Sex\n                        </p>\n                        <input\n                            className=\"form-control\"\n                            type=\"text\"\n                            placeholder=\"\"\n                            name=\"gender\"\n                            value={gender}\n                            onChange={e => onChange(e)} />\n                    <small className=\"form-text text-danger\">\n                        This is used solely for analytics purposes and not for classification of any sort\n                    </small>\n                    </div>\n                    <div className=\"form-group\">\n                        <p className=\"large check-font\">\n                            Personal Bio\n                        </p>\n                        <textarea\n                            className=\"form-control\"\n                            type=\"text\"\n                            placeholder=\"Please provide a bio for your profile\"\n                            name=\"bio\"\n                            value={bio}\n                            onChange={e => onChange(e)} />\n                    </div>\n                    <div className=\"my-2\">\n                        <button onClick={() => toggleSocial(!displaySocial)} type=\"button\" className=\"btn btn-secondary mr-2\">\n                            Add Social Links\n                        </button>\n                        <span>Optional - do not share social links if you are not comfortable with it or are looking for a more private experience</span>\n                    </div>\n\n                    {displaySocial && <Fragment>\n                        <div className=\"form-group social-input\">\n                            <i className=\"fab fa-twitter fa-2x\"></i>\n                            <input\n                                className=\"form-control\"\n                                type=\"text\"\n                                placeholder=\"Twitter URL\"\n                                name=\"twitter\"\n                                value={twitter}\n                                onChange={e => onChange(e)} />\n                            </div>\n\n                            <div className=\"form-group social-input\">\n                                <i className=\"fab fa-facebook fa-2x\"></i>\n                                <input\n                                    className=\"form-control\"\n                                    type=\"text\"\n                                    placeholder=\"Facebook URL\"\n                                    name=\"facebook\"\n                                    value={facebook}\n                                    onChange={e => onChange(e)} />\n                            </div>\n\n                            <div className=\"form-group social-input\">\n                                <i className=\"fab fa-youtube fa-2x\"></i>\n                                <input\n                                    className=\"form-control\"\n                                    type=\"text\"\n                                    placeholder=\"YouTube URL\"\n                                    name=\"youtube\"\n                                    value={youtube}\n                                    onChange={e => onChange(e)} />\n                            </div>\n\n                            <div className=\"form-group social-input\">\n                                <i className=\"fab fa-instagram fa-2x\"></i>\n                                <input\n                                    className=\"form-control\"\n                                    type=\"text\"\n                                    placeholder=\"Instagram URL\"\n                                    name=\"instagram\"\n                                    value={instagram}\n                                    onChange={e => onChange(e)} />\n                            </div>\n                        </Fragment>\n                    }\n                    <input type=\"submit\" className=\"btn btn-primary my-1 mr-1\" />\n                    <Link className=\"btn btn-secondary my-1\" to=\"/dashboard\">Go Back</Link>\n                </form>\n            </div>\n            \n        </Fragment>\n    )\n}\n\nEditProfile.propTypes = {\n    createUserProfile: PropTypes.func.isRequired,\n    getCurrentUser: PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    profile: state.profile\n})\n\n// withRouter allows us to pass in the history object for redirect\nexport default connect(mapStateToProps,{ createUserProfile, getCurrentUser })(withRouter(EditProfile))\n","import React, { Fragment, useState } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { addMilestone } from '../../actions/profile'\n\nconst AddMilestone = props => {\n    const [formData, setFormData] = useState({\n        title: '',\n        description: '',\n        privacy: false\n    })\n    // destructuring the from data\n    const {\n        title,\n        description,\n        privacy\n    } = formData\n    // using a spread operator to copy the form data\n    // using the onChange target to define what formData input feild should be updated\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n    // calling the add milestone action on form submission\n    const onSubmit = async e => {\n        e.preventDefault();\n        // Req_Id:  R0 \n        // Test_Id: 40\n        props.addMilestone(formData, props.history)\n    }\n\n    return (\n        <Fragment>\n            <div className=\"profile-form\">\n                <h1 className=\"large check-font text-center\">\n                    Add Milestone to Profile\n                </h1>\n                \n                <form className=\"form\" onSubmit={e => onSubmit(e)}>\n                    <p className=\"lead text-center\">\n                        <i  className=\"fas fa-user primary-col\"></i> {'  '} Milestones help acknowledge personal acheivements along your journey with check-mate\n                    </p>\n                    <div className=\"form-group\">\n                        <p className=\"lead check-font\">\n                            Title\n                        </p>\n                        <input\n                            className=\"form-control\"\n                            type=\"text\"\n                            placeholder=\"Milestone Title\"\n                            name=\"title\"\n                            value={title}\n                            onChange={e => onChange(e)}\n                            required\n                            />\n                    </div>\n                    <div className=\"form-group\">\n                        <p className=\"lead check-font\">\n                            Description\n                        </p>\n                        <input\n                            className=\"form-control\"\n                            type=\"text\"\n                            placeholder=\"Milestone Description\"\n                            name=\"description\"\n                            value={description}\n                            onChange={e => onChange(e)}\n                            required \n                            />\n                        <small className=\"form-text\">\n                            Describe the reason for the milestone\n                        </small>\n                    </div>\n                    \n                    <div className=\"form-group\">\n                        <p className='pr-2'>\n                        <input\n                            type=\"checkbox\"\n                            onChange={e => setFormData({ ...formData, privacy: !privacy })}\n                            checked={privacy}\n                            name=\"privacy\"\n                            value={privacy}/>\n                            {' '}<i className=\"fas fa-eye-slash\"></i>{' - '} Select if you want this milestone to be private and not visible on your profile\n                        </p>\n                    </div>\n\n                    <input type=\"submit\" className=\"btn btn-primary my-1 mr-1\" />\n                    <Link className=\"btn btn-secondary my-1\" to=\"/dashboard\">Go Back</Link>\n                </form>\n            </div>\n            \n        </Fragment>\n    )\n}\n\nAddMilestone.propTypes = {\n    addMilestone: PropTypes.func.isRequired,\n}\n\nexport default connect(null, {addMilestone})(withRouter(AddMilestone))\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nconst ProfileItem = ({ profile: {\n    user: { _id, name, avatar, },\n    experience,\n    age,\n    gender,\n    bio\n}}) => {\n    // creating the invidual profile component to be displayed in the profiles component\n    return (\n        <div className='profile-container'>\n            <div className=\"profile-item-container\">\n                <img src={avatar} alt=\"profile pic\" className=\"round-img\"/>\n                <div>\n                    <h2 className='check-font'>{name}</h2>\n                    <h4>{age}</h4>\n                    <Link to={`/profile/${_id}`} className='btn btn-primary' >\n                        View Profile\n                    </Link>\n                </div>\n            </div>\n           \n        </div>\n        \n    )\n}\n\nProfileItem.propTypes = {\n    profile: PropTypes.object,\n}\n\nexport default ProfileItem\n","import React, { Fragment, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Spinner } from 'react-bootstrap'\nimport { getProfiles } from '../../actions/profile'\nimport ProfileItem from './ProfileItem'\nimport './Profile.css'\n\n\nconst Profiles = ({ getProfiles, profile: { profiles, loading }}) => {\n    useEffect(() => {\n        getProfiles()\n    }, [getProfiles])\n    return (\n        <Fragment>\n            { loading ? (\n                <Spinner \n                    animation=\"border\"\n                    role=\"status\">\n                </Spinner>\n                ) : (\n                <Fragment>\n                    <div className=\"profile-form\">\n                        <h1 className='check-font text-center large'>Check-mate Profiles</h1>\n                        <p className=\"lead text-center\"><i className=\"fas fa-hands-helping\"></i> Connect with other Checkmates and build a support network with people who understand what you are going through... </p>\n                        <div className=\"profiles-holder\">\n                            {/*\n                            // Req_Id:      R0 - \n                            // Test_Id:     T045\n                            */}\n                            {profiles.length > 0 ? (\n                                profiles.map(p => (\n                                    <ProfileItem key={p._id} profile={p}></ProfileItem>\n                                ))\n                            ) : 'No profiles exist' }\n                        </div>\n                    </div>\n                    \n                </Fragment>)\n            }\n        </Fragment>\n    )\n}\n\nProfiles.propTypes = {\n    getProfiles: PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    profile: state.profile\n})\n\nexport default connect(mapStateToProps, {getProfiles})(Profiles)\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst ProfileMain = ({ profile: { experience, age, gender, bio, social, user: { name, avatar } }}) => {\n    return (\n        <div className=\"container pt-4\">\n            <div className=\"profile-main-container p-3 m-auto mb-4 bg-light text-center rounded-3\">\n                <img className='round-img' src={avatar} alt='profile pic'/>\n                <div className=\"container-fluid py-5\">\n                    <h1 className=\"display-5 fw-bold check-font\">{name}</h1>\n                    <p className=\" fs-4\">{gender}{', '}{age}</p>\n                    <p className=\"fs-4\"></p>\n                    <p className=\"fs-4\"><strong>Journaling Knowledge: </strong>  {experience}</p>\n                    {bio && (\n                        <div>\n                            <h5 className='primary-col'>Background</h5>\n                            <p className=\"fs-4 lead check-font\"> {bio}</p>\n                        </div>\n                        \n                    )}\n                    <button className=\"mt-4 btn btn-primary btn-lg\" type=\"button\">Connect</button>\n                </div>\n            </div>\n\n            <div className=\"row align-items-md-stretch \">\n                <div className=\" d-inline text-center m-auto\">\n                    <div className=\" p-5 text-white  rounded-3 \">\n                    <h2>Social</h2>\n                    {social && social.facebook && (\n                        <a href={social.facebook} rel=\"noreferrer\" target='_blank'><i className=\"fab fa-facebook mr-2 fa-2x primary-col\"></i></a>\n                    )}\n                    {social && social.instagram && (\n                        <a href={social.instagram} rel=\"noreferrer\" target='_blank'><i className=\"fab fa-instagram mr-2 fa-2x primary-col\"></i></a>\n                    )}\n                    {social && social.youtube && (\n                        <a href={social.youtube} rel=\"noreferrer\" target='_blank'><i className=\"fab mr-2 fa-youtube fa-2x primary-col\"></i></a>\n                    )}\n                    {social && social.twitter && (\n                        <a href={social.twitter} rel=\"noreferrer\" target='_blank'><i className=\"fab fa-twitter fa-2x primary-col\"></i></a>\n                    )}\n                    <p className='pt-1'><strong className='primary-col'>NOTE:</strong> you should only connect with people you know and trust.</p>\n                    <p>This is to help people share advice about mental health through social media platfroms</p>\n                </div>\n            </div>\n                \n            </div>\n        </div>\n    )\n}\n\nProfileMain.propTypes = {\n    profile: PropTypes.object.isRequired,\n}\n\nexport default ProfileMain\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Moment from 'react-moment'\n\nconst ProfileMilestones = ({ milestones: { title, description, privacy, dateAcheived } }) => {\n    return (\n        <div className=\"container\">\n            <div className=\"milestone-container p-5\">\n                <h2>{title}</h2>\n                <p className='lead check-font'>{description}</p>\n                <p><strong>Acheived: </strong><Moment format=\"DD/MM/YY\">{dateAcheived}</Moment></p>\n                <p>{privacy}</p>\n                <button className=\"btn btn-primary\" type=\"button\">Congratulate</button>\n            </div>\n        </div>\n    )\n}\n\nProfileMilestones.propTypes = {\n    milestones: PropTypes.object.isRequired\n}\n\nexport default ProfileMilestones\n","import React, { Fragment, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Spinner } from 'react-bootstrap'\nimport { getProfileById } from '../../actions/profile'\nimport ProfileMain from './ProfileMain'\nimport ProfileMilestones from './ProfileMilestones'\n\nconst Profile = ({ getProfileById, profile: {profile, loading, milestones }, auth, match }) => {\n    useEffect(() => {\n        getProfileById(match.params.id)\n    }, [getProfileById])\n\n    return (\n        <Fragment>\n            {profile === null || loading ? (\n                <Spinner \n                    animation=\"border\"\n                    role=\"status\">\n                </Spinner>\n                ) : (\n                    <Fragment>\n                        <div className=\"profile-form\">\n                            <Link className=\"btn btn-secondary my-1\" to=\"/profiles\">Go Back</Link>\n                            {auth.isAuthenticated && auth.loading === false && auth.user._id === profile.user._id &&\n                            (<Link className=\"btn btn-primary ml-1 my-1\" to=\"/edit-profile\">Edit</Link>) }\n                            <div className=\"profile-display-container\">\n                                <ProfileMain profile={profile} />\n                                \n                                <h1 className='text-center primary-col check-font'>User Milestones</h1>\n                                {profile.milestones.length > 0 ? \n                                ( \n                                    <Fragment>\n                                        {profile.milestones.map(pms => (\n                                            <ProfileMilestones key={pms._id} milestones={pms}/>\n                                        ))\n                                        }\n                                    </Fragment>\n                                ) : (\n                                    <h4>No public milestones to display</h4>\n                                )}\n                            </div>\n                        </div>\n                        \n                    </Fragment>\n                )}\n        </Fragment>\n    )\n}\n\nProfile.propTypes = {\n    getProfileById: PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired,\n    auth: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    profile: state.profile,\n    auth: state.auth\n})\n\nexport default connect(mapStateToProps, {getProfileById})(Profile)\n","import React, { Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport Moment from 'react-moment'\nimport { addReaction, deleteCheckin } from '../../actions/checkin'\n\n\n\nconst CheckinItem = ({ addReaction, personalCheckins, deleteCheckin, auth, showButtons, checkin: { _id, title, emotion, intensity, maintext, sentiment, magnitude, privacy, name, user, avatar, reactions, comments, date } }) => {\n    return (\n        <Fragment>\n            <div className=\"checkin-container\">\n                {/* Checking that the checkin user is the current user\n                    ReqId:  R0 \n                    TestId: T050\n                    */}\n                    {!auth.loading && user === auth.user._id && (\n                        <button onClick={e => deleteCheckin(_id)} className=\"btn btn-danger\">\n                            <i className=\"fas fa-times\"></i>\n                        </button>\n                    )}\n                <div className='pt-2 text-center'>\n                    <Link to={`/profile/${user}`}>\n                        <img src={avatar} alt=\"\" className=\"round-img\"/>\n                        <h4 className='primary-col text-center pt-2'>{name}</h4>\n                    </Link>\n                    {personalCheckins ? \n                    <Fragment>\n                        <h6 className='primary-col text-center p-2'><strong className='text-light' > Sentiment: </strong>{sentiment} <strong className='text-light'>, Magnitude: </strong>{magnitude}</h6>\n                        <h4>{privacy ? <i className=\"fas fa-eye-slash primary-col\"></i> : <i className=\"fas fa-eye\"></i>}</h4> \n                    </Fragment> : ''} \n                    {/*\n                    ReqId:  R0\n                    TestId: T048    \n                    Adding support reaction to freinds checkin\n                    */}\n                    {showButtons ? \n                    <Fragment>\n                        <button onClick={e => addReaction(_id)} className=\"btn btn-primary\">\n                        <i className=\"fas fa-heart\"></i>\n                        {reactions.length > 0 && (\n                            <span className=''>{' '}{reactions.length}</span>\n                        )}\n                        </button>\n                        <Link to={`/checkin/${_id}`} className=\"btn btn-primary\">\n                            <i className=\"far fa-comment-dots\"></i> Discussion\n                            {comments.length > 0 && (\n                                <span className=''>{' '}{comments.length}</span>\n                            )}\n                        </Link>\n                    </Fragment> : ''}\n                </div>\n                {/*\n                 * The layout for the notebook paper was sourced from:\n                 * https://www.codesdope.com/blog/article/getting-notebook-paper-effect-with-css/\n                 * full harvard reference in technical report\n                 */}\n                <div className=\"checkin-body\">\n                    <div id=\"paper\">\n                    \n                        <div id=\"pattern\">\n                            <div id=\"content\">\n                            {title}{' '} \n                            <br/><br/>Primary Emotion: {emotion}\n                            <br />Intensity: {intensity}\n                            <br/><br/>{maintext}\n                            <br/><br/><br /><Moment format=\"DD/MM/YY\">{date}</Moment>\n                            </div>\n                        </div>\n                    </div>\n                    \n                    \n                    \n                    \n                </div>\n               \n            </div>\n            \n        </Fragment>\n    )\n}\n\nCheckinItem.defaultProps = {\n    showButtons: true,\n    personalCheckins: true\n}\n\nCheckinItem.propTypes = {\n    checkin: PropTypes.object.isRequired,\n    auth: PropTypes.object.isRequired,\n    addReaction: PropTypes.func.isRequired,\n    deleteCheckin: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n})\n\nexport default connect(mapStateToProps, { addReaction, deleteCheckin })(CheckinItem)\n","import React, { Fragment, useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { io } from \"socket.io-client\";\nimport './Chats.css'\n\nlet CONNECTION_PORT\nif(process.env.NODE_ENV === 'production') {\n    CONNECTION_PORT = window.location.hostname\n}\nelse {\n    CONNECTION_PORT = 'http://localhost:5000'\n}\n\n// GENERAL DOCUMENTATION: https://www.npmjs.com/package/socket.io \n// GENERAL DOCUMENTATION: https://socket.io/docs/v3/client-initialization/\n\n/***************************************************************************************\n*    Title: Socket-Chat-App\n*    Author: Pedro Machado\n*    Date: 2020\n*    Code version: 1.0\n*    Availability: https://github.com/machadop1407/Socket-Chat-App\n*\n***************************************************************************************/\n\nlet socket\n\nconst Chats = ({ auth: {user} }) => {\n    \n    const [room, setRoom] = useState('')\n    const [userName, setUserName] = useState('')\n    const [inRoom, setInRoom] = useState(false)\n\n    const [message, setMessage] = useState('')\n    const [messageList, setMessageList] = useState([])\n\n    useEffect(() => {\n        socket = io(CONNECTION_PORT)\n        \n    }, [CONNECTION_PORT])\n\n    useEffect(() => {\n        socket.on('receiveMessage', (data) => {\n            console.log(data)\n            setMessageList([...messageList, data])\n        })\n    })\n\n    const connectToRoom = () => {\n        socket.emit('joinRoom', ({ userName, room }))\n        setInRoom(true)\n    }\n\n    const leaveRoom = () => {\n        socket.emit('leaveRoom', ({ userName, room }))\n        setInRoom(false)\n        setMessageList([])\n    }\n\n    const sendMessage = async () => {\n\n        let chatMessage = {\n            room: room,\n            content: {\n                userName: userName,\n                message: message\n            }\n        }\n\n        await socket.emit('sendMessage', chatMessage )\n        setMessageList([...messageList, chatMessage.content])\n        setMessage('')\n    }\n\n    return (\n        <Fragment> \n            \n            {inRoom ? \n                <div className=\"chat-container\">\n                    <h1 className='check-font'>{room}</h1>\n                    <div className=\"chat-message-container\">\n                        {messageList.map((val, key) => {\n                            return (\n                                <div className=\"messages-container\" id={val.userName === userName ? 'me' : 'other'}>\n                                    <div className=\"messages\" >\n                                        <p className=\"primary\"><strong>{val.userName}</strong></p>\n                                        <p className=\"lead\">{val.message} </p>\n                                    </div>\n                                </div>\n                                \n                            )\n                        })}\n                    </div>\n                    <div className='chat-input'>\n                        <input\n                            className=\"\"\n                            name='message'\n                            value={message}\n                            type=\"text\"\n                            placeholder='Enter Message'\n                            onChange={(e) => {\n                                setMessage(e.target.value)\n                                setUserName(user.name)\n                            }}\n                        />\n                        <button\n                            className='btn btn-secondary'\n                            onClick={sendMessage}>\n                                Send\n                        </button>\n                    </div>\n                    <button\n                        className='btn btn-danger'\n                        onClick={leaveRoom}\n                        >\n                        Leave\n                    </button>\n                </div> \n                : \n                <div className=\"chat-form-container\">\n                    <h1 className='check-font large'>check-mate chats</h1>\n                    <div className=\"form-group\">\n                        <select\n                        onChange={(e) => {\n                            setRoom(e.target.value)\n                            setUserName(user.name)\n                        }}\n                        className='form-control'\n                        required\n                        name=\"room\"\n                        value={room} >\n                            <option value=\"0\">* Select Chat Room</option>\n                            <option value=\"Anxiety\">Anxiety</option>\n                            <option value=\"Bipolar Disorders\">Bipolar Disorders</option>\n                            <option value=\"Depression\">Depression</option>\n                            <option value=\"Eating Disorders\">Eating Disorders</option>\n                            <option value=\"Paranoia\">Paranoia</option>\n                            <option value=\"Postnatal Depression\">Postnatal Depression</option>\n                            <option value=\"PTSD\">Post Traumtic Stress Disorder (PTSD)</option>\n                            <option value=\"Schizophrenia\">Schizophrenia</option>\n                            <option value=\"Self Harm\">Self Harm</option>\n                            <option value=\"Substance Abuse\">Substance Abuse</option>\n                            <option value=\"Suicide\">Suicide</option>\n                        </select>\n                        \n                    </div>\n                    <button\n                        className='btn btn-secondary'\n                        onClick={connectToRoom}>\n                            Join\n                    </button>\n                </div> \n            }\n        </Fragment>\n    )\n}\n\nChats.propTypes = {\n    auth: PropTypes.object.isRequired,\n}\nconst mapStateToProps = state => ({\n    auth: state.auth\n})\n\nexport default connect(mapStateToProps, {  })(Chats)\n","import axios from 'axios'\nimport { setAlert } from './alerts'\nimport { GET_CHECKINS, ADD_REACTION, GET_CHECKIN, CHECKIN_ERROR, CREATE_CHECKIN, DELETE_CHECKIN, ADD_COMMENT, DELETE_COMMENT } from './types'\n\n// action to get checkins\nexport const getCheckins = () => async dispatch => {\n    try {\n        // getting all checkins from backend api\n        const res = await axios.get('/api/checkins')\n        // dispatching the checkins reducer action\n        dispatch({\n            type: GET_CHECKINS,\n            payload: res.data\n        })\n    } catch (error) {\n        dispatch({\n            type: CHECKIN_ERROR,\n            payload: { msg: error.response.statusText, status: error.response.status }\n        })\n    }\n}\n\n// action to get all personal checkins\nexport const getPersonalCheckins = () => async dispatch => {\n    try {\n        // getting all user's checkins from backend api\n        const res = await axios.get(`/api/checkins/user`)\n        // dispatching the checkins reducer action\n        dispatch({\n            type: GET_CHECKINS,\n            payload: res.data\n        })\n    } catch (error) {\n        dispatch({\n            type: CHECKIN_ERROR,\n            payload: { msg: error.response.statusText, status: error.response.status }\n        })\n    }\n}\n\n// action to add support reaction to checkin\nexport const addReaction = checkinId => async dispatch => {\n    try {\n        // getting all checking from backend api\n        const res = await axios.put(`/api/checkins/reaction/${checkinId}`)\n        // dispatching the checkins reducer action\n        dispatch({\n            type: ADD_REACTION,\n            payload: { checkinId, reactions: res.data}\n        })\n    } catch (error) {\n        dispatch({\n            type: CHECKIN_ERROR,\n            payload: { msg: error.response.statusText, status: error.response.status }\n        })\n    }\n}\n\n// action to delete a user checkin\nexport const deleteCheckin = checkinId => async dispatch => {\n    try {\n        await axios.delete(`api/checkins/${checkinId}`)\n        // dispatching the delete checkin reducer action\n        dispatch({\n            type: DELETE_CHECKIN,\n            payload: checkinId\n        })\n        // notifying the user through the set alert action\n        dispatch(setAlert('Checkin has been successfully deleted', 'success'))\n    } catch (error) {\n        dispatch({\n            type: CHECKIN_ERROR,\n            payload: { msg: error.response.statusText, status: error.response.status }\n        })\n    }\n}\n\n// action to create a user checkin\nexport const createCheckin = (formData) => async dispatch => {\n    // config of headers\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n    try {\n        // ReqId:   \n        // TestId:  T051\n        const res = await axios.post('api/checkins/', formData, config)\n        // dispatching the create checkin reducer action\n        // ReqId:   \n        // TestId:  T051\n        dispatch({\n            type: CREATE_CHECKIN,\n            payload: res.data\n        })\n        // notifying the user through the set alert action\n        dispatch(setAlert('Checkin has been created, keep it up!', 'success'))\n    } catch (error) {\n        dispatch({\n            type: CHECKIN_ERROR,\n            payload: { msg: error.response.statusText, status: error.response.status }\n        })\n    }\n}\n\n// action to get an individual user checkin\nexport const getCheckin = (checkinId) => async dispatch => {\n    try {\n        // getting the individual checkin from backend api\n        const res = await axios.get(`/api/checkins/${checkinId}`)\n        // dispatching the checkin reducer action\n        // ReqId:   \n        // TestId:  T052\n        dispatch({\n            type: GET_CHECKIN,\n            payload: res.data\n        })\n    } catch (error) {\n        dispatch({\n            type: CHECKIN_ERROR,\n            payload: { msg: error.response.statusText, status: error.response.status }\n        })\n    }\n}\n\n// action to add advice comment to user checkin\nexport const addComment = (checkinId, formData) => async dispatch => {\n    // config of headers\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n    try {\n        // post request to the backend api\n        const res = await axios.post(`/api/checkins/comment/${checkinId}`, formData, config)\n        // dispatching the checkin comment reducer action\n        // ReqId:   \n        // TestId:  T053\n        dispatch({\n            type: ADD_COMMENT,\n            payload: res.data\n        })\n        // notifying the user through the set alert action\n        dispatch(setAlert('Comment added', 'success'))\n    } catch (error) {\n        dispatch({\n            type: CHECKIN_ERROR,\n            payload: { msg: error.response.statusText, status: error.response.status }\n        })\n    }\n}\n\n// action to delete advice comment from user checkin\nexport const deleteComment = (checkinId, commentId) => async dispatch => {\n    try {\n        // delete request to the backend api\n        await axios.delete(`/api/checkins/comment/${checkinId}/${commentId}`)\n        // dispatching the delete comment reducer action\n        // ReqId:   \n        // TestId:  T054\n        dispatch({\n            type: DELETE_COMMENT,\n            payload: commentId\n        })\n        // notifying the user through the set alert action\n        dispatch(setAlert('Comment deleted successfully', 'success'))\n    } catch (error) {\n        dispatch({\n            type: CHECKIN_ERROR,\n            payload: { msg: error.response.statusText, status: error.response.status }\n        })\n    }\n}","import React, { useState, Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { createCheckin } from '../../actions/checkin'\nimport { Link } from 'react-router-dom'\n\nconst CheckinForm = ({ createCheckin }) => {\n\n    const [formData, setFormData] = useState({\n        title: '',\n        emotion: '',\n        intensity: 0,\n        maintext: '',\n        privacy: true\n    })\n     // destructuring constants from form data\n     const {\n        title,\n        emotion,\n        intensity,\n        maintext,\n        privacy\n    } = formData\n    // using a spread operator to copy the form data\n    // using the onChange target to define what formData input feild should be updated\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n    // calling the create checkin action on form submission\n    const onSubmit = async e => {\n        e.preventDefault();\n        // Req_Id: R0 \n        // Test_Id: T051\n        createCheckin(formData)\n        // resetting the checkin form data\n        setFormData({\n            title: '',\n            emotion: '',\n            intensity: 0,\n            maintext: '',\n            privacy: true\n        })\n    }\n\n    return (\n        <Fragment>\n            <div className=\"text-center\">\n                <h1 className=\"large check-font\">\n                    Create Check-in\n                </h1>\n                \n                \n                <form className=\"form\" onSubmit={e => onSubmit(e)}>\n                    <p className=\"lead\">\n                        <i  className=\"fas fa-user primary-col\"></i> Take a deep breath and focus on you for the next few minutes...\n                    </p>\n                    <div className=\"form-group\">\n                        <p className=\"large check-font\">\n                            Title\n                        </p>\n                        <input\n                            className=\"form-control w-75 m-auto\"\n                            type=\"text\"\n                            placeholder=\"\"\n                            name=\"title\"\n                            value={title}\n                            required\n                            onChange={e => onChange(e)} />\n                    </div>\n                    <p>\n                        Select the primary emotions that best describes how you are feeling\n                    </p>\n                    <div className=\"form-group\">\n                        <select\n                        onChange={e => onChange(e)}\n                        className='form-control w-75 m-auto'\n                        required\n                        name=\"emotion\"\n                        value={emotion} >\n                            <option value=\"0\">* Select Primary Emotion</option>\n                            <option value=\"Anger\">Anger</option>\n                            <option value=\"Anticipation\">Anticipation</option>\n                            <option value=\"Disgust\">Disgust</option>\n                            <option value=\"Fear\">Fear</option>\n                            <option value=\"Joy\">Joy</option>\n                            <option value=\"Sadness\">Sadness</option>\n                            <option value=\"Surprise\">Surprise</option>\n                            <option value=\"Trust\">Trust</option>\n                        </select>\n                        \n                    </div>\n                    <div className=\"form-group\">\n                        <p className=\"large check-font\">\n                            Intensity\n                        </p>\n                        <input\n                            className=\"w-75\"\n                            type=\"range\"\n                            min=\"0\"\n                            max=\"10\"\n                            required\n                            name=\"intensity\"\n                            value={intensity}\n                            onChange={e => onChange(e)} />\n                    </div>\n                    <div className=\"form-group\">\n                        <p className=\"large check-font\">\n                            Details\n                        </p>\n                        <textarea\n                            className=\"form-control  w-75 m-auto\"\n                            type=\"text\"\n                            rows=\"10\"\n                            placeholder=\"Be honest and open with yourself\"\n                            name=\"maintext\"\n                            value={maintext}\n                            onChange={e => onChange(e)} />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <p className='pr-2'>\n                        <input\n                            type=\"checkbox\"\n                            onChange={e => setFormData({ ...formData, privacy: !privacy })}\n                            checked={privacy}\n                            name=\"privacy\"\n                            value={privacy}/>\n                            {' '}<i className=\"fas fa-eye-slash\"></i>{' - '} Select if you want this checkin to be private and hidden from all users\n                        </p>\n                    </div>\n                    \n                    <input type=\"submit\" className=\"btn btn-primary my-1 mr-1\" />\n                    <Link className=\"btn btn-secondary my-1\" to=\"/dashboard\">Go Back</Link>\n                </form>\n            </div>\n           \n        </Fragment>\n    )\n}\n\nCheckinForm.propTypes = {\n    createCheckin: PropTypes.func.isRequired,\n}\n\nexport default connect(null, { createCheckin })(CheckinForm)\n","export default __webpack_public_path__ + \"static/media/plutchik.08760b4e.png\";","import React , { Fragment, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { getPersonalCheckins } from '../../actions/checkin'\nimport { Spinner } from 'react-bootstrap'\nimport CheckinItem from './CheckinItem'\nimport CheckinForm from './CheckinForm'\nimport plutchik from '../../assets/plutchik.png'\nimport './Checkins.css';\n\n\n\nconst Checkins = ({ getPersonalCheckins, checkin: { checkins, loading } }) => {\n    useEffect(() => {\n        getPersonalCheckins()\n    }, [getPersonalCheckins])\n    return loading ? \n        <Spinner \n            animation=\"border\"\n            role=\"status\">\n        </Spinner> : (\n        <Fragment>\n            <div className=\"container-checkins\">\n                <div className=\"text-center\">\n                    <img src={plutchik} alt=''/>\n                </div>\n                \n                <CheckinForm/>\n                <h1 className='mt-4 large check-font text-center'>Check-ins</h1>\n                <p className=\"lead text-center\">\n                    <i className=\"fas fa-user primary-col\"></i> Reflect on previous checkins to get view your progress\n                </p>\n                <div className=\"checkins\">\n                    {checkins.map(checkin => (\n                        <CheckinItem key={checkin._id} checkin={checkin}/>\n                    ))}\n                </div>\n            </div>  \n        </Fragment>\n    )\n}\n\nCheckins.propTypes = {\n    getPersonalCheckins: PropTypes.func.isRequired,\n    checkin: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    checkin: state.checkin,\n})\n\nexport default connect(mapStateToProps, { getPersonalCheckins })(Checkins)\n","import React, { Fragment, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { addComment } from '../../actions/checkin'\n\nconst CheckinComment = ({ checkinId, addComment }) => {\n    const [text, setText] = useState('')\n    return (\n        <Fragment>\n            <div className=\"comment-form\">\n                <form onSubmit={e => {\n                    e.preventDefault()\n                    {/*\n                        TestId: T053\n                     */}\n                    addComment(checkinId, { text })\n                    setText('')\n                    }}>\n                    <div className=\"form-group m-auto\">\n                        <textarea\n                            className='form-control'\n                            name=\"text\"\n                            value={text}\n                            cols=\"20\"\n                            rows=\"10\"\n                            placeholder='Add your comment'\n                            onChange={e => setText(e.target.value)}\n                            required\n                            >\n                        </textarea>\n                        <input type=\"submit\" className='btn btn-primary mt-2' value='Submit'/>\n                    </div>\n                    \n                    \n                </form>\n            </div>\n        </Fragment>\n    )\n}\n\nCheckinComment.propTypes = {\n    addComment: PropTypes.func.isRequired\n}\n\nexport default connect(null, { addComment })(CheckinComment)\n","import React, { Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport Moment from 'react-moment'\nimport { deleteComment } from '../../actions/checkin'\n\nconst CommentItem = ({ auth, deleteComment, checkinId, comment: { _id, text, name, avatar, user, date } }) => {\n    return (\n        <Fragment>\n                <div className=\"comment-container\">\n                    <div className='text-center'>\n                        <Link to={`/profile/${user}`}>\n                        <img\n                            className=\"round-img text-center pt-2\"\n                            src={avatar}\n                            alt=\"\"\n                        />\n                        <h4 className='primary-col'>{name}</h4>\n                        </Link>\n                    </div>\n                    <div className='comment-body'>\n                        <p className=\"check-font lead\">\n                            {text}\n                        </p>\n                        <p className=\"p-2 primary-col\">\n                            Posted on <Moment format=\"DD/MM/YY\">{date}</Moment>\n                        </p>\n                        {/*\n                            ReqId:      R0\n                            TestId:     T054\n                        */}\n                        {!auth.loading && user === auth.user._id && (\n                            <button onClick={e => deleteComment(checkinId, _id)} className=\"btn btn-danger\">\n                                <i className=\"fas fa-times\"></i>\n                            </button>\n                        )}\n                    </div>\n                    \n                </div>\n                \n            \n        </Fragment>\n    )\n}\n\nCommentItem.propTypes = {\n    checkinId: PropTypes.string.isRequired,\n    comment: PropTypes.object.isRequired,\n    auth: PropTypes.object.isRequired,\n    deleteComment: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n})\n\nexport default connect(mapStateToProps, { deleteComment })(CommentItem)\n","import React, { Fragment, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Spinner } from 'react-bootstrap'\nimport { getCheckin } from '../../actions/checkin'\nimport CheckinItem from '../checkins/CheckinItem'\nimport CheckinComment from './CheckinComment'\nimport CommentItem from './CommentItem'\n\n\n\nconst Checkin = ({ getCheckin, checkin: { checkin, loading }, match }) => {\n    useEffect(() => {\n        getCheckin(match.params.id)\n    }, [getCheckin])\n\n    return loading || checkin === null ? ( \n        <Fragment>\n            <Spinner \n                animation=\"border\"\n                role=\"status\">\n            </Spinner>\n        </Fragment>\n    ) : (\n        <Fragment>\n            <div className=\"profile-form\">\n                <Link to={'/checkins'} className='btn btn-secondary mb-2'>Go Back</Link>\n                <CheckinItem personalCheckins={false} checkin={checkin} showButtons={false}/>\n                <CheckinComment checkinId={checkin._id} />\n                <div className=\"checkin-comments\">\n                    {checkin.comments.map(comment => (\n                        <CommentItem key={comment._id} comment={comment} checkinId={checkin._id}/>\n                    ))}\n                </div>\n            </div>\n           \n        </Fragment>\n        \n    )\n}\n\nCheckin.propTypes = {\n    getCheckin: PropTypes.func.isRequired,\n    checkin: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    checkin: state.checkin\n})\n\nexport default connect(mapStateToProps, { getCheckin })(Checkin)\n","import React , { Fragment, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { getCheckins } from '../../actions/checkin'\nimport { Spinner } from 'react-bootstrap'\nimport CheckinItem from './CheckinItem'\n\nconst CheckinsAll = ({ getCheckins, checkin: { checkins, loading }}) => {\n    useEffect(() => {\n        getCheckins()\n    }, [getCheckins])\n    return loading ? \n        <Spinner \n            animation=\"border\"\n            role=\"status\">\n        </Spinner> : (\n        <Fragment>\n            <div className=\"profile-form\">\n                <h1 className='check-font text-center'>Community</h1>\n                <p className=\"lead text-center\">\n                    <i className=\"fas fa-user primary-col\"></i> check-up on freinds and other check-mate users\n                </p>\n                <div className=\"checkins\">\n                    {checkins.map(checkin => (\n                        <CheckinItem personalCheckins={false} key={checkin._id} checkin={checkin}/>\n                    ))}\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nCheckinsAll.propTypes = {\n    getCheckins: PropTypes.func.isRequired,\n    checkin: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    checkin: state.checkin\n})\n\nexport default connect(mapStateToProps, { getCheckins })(CheckinsAll)\n","import React, { Fragment, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Home from './components/layout/Home';\nimport './App.css';\nimport Register from './components/auth/Register';\nimport Login from './components/auth/Login';\nimport Alert from './components/layout/Alert';\nimport Dashboard from './components/dashboard/Dashboard';\nimport PrivateRoute from './components/router/PrivateRoute';\n// Wrapper for combining React and Redux\nimport { Provider } from 'react-redux';\n// REDUX STORE\nimport store from './store';\nimport { userPresent } from './actions/auth';\nimport setAuthToken from './helpers/setAuthToken';\nimport CreateProfile from './components/profile_forms/CreateProfile';\nimport EditProfile from './components/profile_forms/EditProfile';\nimport AddMilestone from './components/profile_forms/AddMilestone';\nimport Profiles from './components/profiles/Profiles';\nimport Profile from './components/profile/Profile';\nimport Checkins from './components/checkins/Checkins';\nimport Checkin from './components/checkin/Checkin';\nimport Chats from './components/chats/Chats';\nimport CheckinsAll from './components/checkins/CheckinsAll';\n\n\nif(localStorage.token) {\n  setAuthToken(localStorage.token);\n}\nconst App = () => {\n  // useEffect hook\n  useEffect(() => {\n    // accessing the redux store to call the dispatch user present action (runs once)\n    store.dispatch(userPresent());\n  }, []);\n\n  return (\n    <Provider store={store}>\n        <Router>\n          <Fragment>\n          <section className='root-container'>\n            <Navbar/>\n            \n              <Route exact path=\"/\" component={ Home }/>\n              <Alert/>\n              <Switch>\n                <Route exact path=\"/login\" component={ Login } />\n                <Route exact path=\"/register\" component={ Register } />\n                <Route exact path=\"/profiles\" component={ Profiles } />\n                <PrivateRoute exact path=\"/chats\" component={ Chats } />\n                <PrivateRoute exact path=\"/checkin/:id\" component={ Checkin } />\n                <PrivateRoute exact path=\"/checkins\" component={ Checkins } />\n                <PrivateRoute exact path=\"/checkins/all\" component={ CheckinsAll } />\n                <PrivateRoute exact path=\"/profile/:id\" component={ Profile } />\n                <PrivateRoute exact path=\"/dashboard\" component={ Dashboard } />\n                <PrivateRoute exact path=\"/create-profile\" component={ CreateProfile } />\n                <PrivateRoute exact path=\"/edit-profile\" component={ EditProfile } />\n                <PrivateRoute exact path=\"/add-milestone\" component={ AddMilestone } />\n              </Switch>\n            </section>\n            \n          </Fragment>\n        </Router>\n    </Provider>\n  )\n};\n\n\n  \n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}